"""empty message

Revision ID: 8fb5c4d572c1
Revises: 
Create Date: 2025-04-05 16:20:38.680878

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8fb5c4d572c1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('event_date', sa.String(length=10), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EventModifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('modified_by', sa.Integer(), nullable=True),
    sa.Column('modifications', sa.Text(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['Events.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Exams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('question_bank_id', sa.Integer(), nullable=True),
    sa.Column('exam_duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['Events.id'], ),
    sa.ForeignKeyConstraint(['question_bank_id'], ['Question_Banks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_column('Admin_Details', 'password')
    op.add_column('Events', sa.Column('title', sa.String(length=100), nullable=False))
    op.add_column('Events', sa.Column('description', sa.Text(), nullable=False))
    op.add_column('Events', sa.Column('years', sa.JSON(), nullable=True))
    op.add_column('Events', sa.Column('departments', sa.JSON(), nullable=True))
    op.add_column('Events', sa.Column('semesters', sa.JSON(), nullable=True))
    op.add_column('Events', sa.Column('courses', sa.JSON(), nullable=True))
    op.add_column('Events', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('Events', sa.Column('visibility', sa.String(length=20), nullable=True))
    op.add_column('Events', sa.Column('status', sa.String(length=20), nullable=True))
    op.alter_column('Events', 'created_by',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Integer(),
               nullable=True)
    op.alter_column('Events', 'event_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=True)
    op.drop_constraint('Events_question_paper_fkey', 'Events', type_='foreignkey')
    op.create_foreign_key(None, 'Events', 'Users', ['created_by'], ['id'])
    op.drop_column('Events', 'user_ids')
    op.drop_column('Events', 'created_by_id')
    op.drop_column('Events', 'details')
    op.drop_column('Events', 'created_date')
    op.drop_column('Events', 'question_paper')
    op.drop_column('Events', 'name')
    op.drop_column('Events', 'people')
    op.drop_column('Student_Details', 'password')
    op.drop_column('Teacher_Details', 'password')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Teacher_Details', sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('Student_Details', sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('Events', sa.Column('people', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('Events', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('Events', sa.Column('question_paper', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Events', sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('Events', sa.Column('details', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('Events', sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('Events', sa.Column('user_ids', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'Events', type_='foreignkey')
    op.create_foreign_key('Events_question_paper_fkey', 'Events', 'Question_Banks', ['question_paper'], ['id'])
    op.alter_column('Events', 'event_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('Events', 'created_by',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('Events', 'status')
    op.drop_column('Events', 'visibility')
    op.drop_column('Events', 'created_at')
    op.drop_column('Events', 'courses')
    op.drop_column('Events', 'semesters')
    op.drop_column('Events', 'departments')
    op.drop_column('Events', 'years')
    op.drop_column('Events', 'description')
    op.drop_column('Events', 'title')
    op.add_column('Admin_Details', sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_table('Exams')
    op.drop_table('EventModifications')
    op.drop_table('notification')
    op.drop_table('Users')
    # ### end Alembic commands ###
